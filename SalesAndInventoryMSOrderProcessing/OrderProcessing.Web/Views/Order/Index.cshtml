@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using OrderProcessing.Core.Entities
@model OrderProcess

@{
    ViewBag.Title = "Your Cart";
    decimal s = 0;

}
<div class="row">
    <div class="col-md-4">
        <form asp-action="ItemCart">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="CustomerID" class="form-control" value="@Model.CustomerID" name="CustomerID" id="CustomerID" hidden />
            </div>
            <div class="form-group">
                <table id="tblItem" class="table table-striped table-hover" style=" width:55%;">
                    <thead>
                        <tr>
                            <th hidden>Id</th>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Sub Total</th>
                        </tr>
                    </thead>
                    <tbody class="table" id="tbbody">
                        @if (Model == null || Model.itemList == null || Model.itemList.Count == 0)
                        {
                            <tr>
                                <td hidden>
                                    <input class="form-control" id="Id" name="itemList[0].Id" />
                                </td>
                                <td>
                                    <input class="form-control" id="name" name="itemList[0].Name" />
                                </td>
                                <td>
                                    <input class="form-control" id="desc" name="itemList[0].Description" />
                                </td>
                                <td>
                                    <input class="form-control" id="price" name="itemList[0].Price" />
                                </td>
                                <td>
                                    <input class="form-control" id="quantity" name="itemList[0].Quantity" />
                                </td>
                                <td>
                                    <input class="form-control" id="subTotal" name="SubTotal" />
                                </td>
                                @* <td><input type="button" class="btnremove" value="remove" /></td> *@
                            </tr>
                        }
                        else if (Model.itemList != null && Model.itemList.Count > 0)
                        {
                            @for (var i = 0; i < Model.itemList.Count; i++)
                            {
                                s = s + @Model.itemList[@i].Price * @Model.itemList[@i].Quantity;

                                <tr>
                                    <td hidden>
                                        <input class="form-control" asp-for="@Model.itemList[@i].Id" value="@Model.itemList[@i].Id" id="Id" />
                                    </td>
                                    <td>
                                        <input class="form-control" asp-for="@Model.itemList[@i].Name" value="@Model.itemList[@i].Name" id="Name" readonly />
                                    </td>
                                    <td>
                                        <input class="form-control" asp-for="@Model.itemList[@i].Description" value="@Model.itemList[@i].Description" id="Description" readonly />
                                    </td>
                                    <td>
                                        <input class="form-control" asp-for="@Model.itemList[@i].Price" value="@Model.itemList[@i].Price" id="Price" readonly />
                                    </td>
                                    <td>
                                        <input class="form-control" asp-for="@Model.itemList[@i].Quantity" value="@Model.itemList[@i].Quantity" id="Quantity" readonly />
                                    </td>
                                    <td>
                                        @Math.Round((@Model.itemList[@i].Price * @Model.itemList[@i].Quantity),2)
                                    </td>
                                </tr>
                            }
                            <tr>
                                <td align="right" colspan="4"><strong>Total:</strong></td>
                                <td>@Math.Round(s,2)</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td><input type="button" id="btnAjaxSubmit" value="Process Order" class="btn btn-primary" /></td>
                        </tr>

                    </tfoot>
                </table>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(function () {
            //use Ajax to submit the data
            debugger;
            $("#btnAjaxSubmit").click(function () {
                debugger;
                //define a object.
                var op = {};
                op.CustomerID = parseInt($("#CustomerID").val());

                var items = [];
                //loop through the rows and get the name and age.
                $("#tbbody >tr").each(function (index, item) {
                    var newItem = {};
                    newItem.Id = parseInt($(item).find("#Id").val());
                    newItem.Name = $(item).find("#Name").val();
                    newItem.Description = $(item).find("#Description").val();
                    newItem.Price = parseFloat($(item).find("#Price").val());
                    newItem.Quantity = parseInt($(item).find("#Quantity").val());
                    items.push(newItem);
                });
                items.pop();
                op.itemList = items;
                //use jquery ajax to call the controller action.
                $.ajax({
                    type: "POST",
                    url: "/Order/SaveOrder",
                    dataType: "json",
                    contentType: 'application/json',
                    headers: {
                        RequestVerificationToken:
                            $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    data: JSON.stringify(op),
                    success: function (data) {

                        //in the success function, you can redirect to other page via the windows.location property.
                        alert(data);
                    }
                });
            });

        });
    </script>
}
